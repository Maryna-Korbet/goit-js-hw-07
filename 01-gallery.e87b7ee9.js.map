{"mappings":"YAAO,IAAMA,EAAe,CAC1B,CACEC,QACE,uFACFC,SACE,uFACFC,YAAa,mBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,6BAEf,CACEF,QACE,wEACFC,SACE,wEACFC,YAAa,qBAEf,CACEF,QACE,0EACFC,SACE,0EACFC,YAAa,iBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,oBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,yBAEf,CACEF,QACE,2EACFC,SACE,2EACFC,YAAa,yBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,oBAEf,CACEF,QACE,6EACFC,SACE,6EACFC,YAAa,yBCnDjBC,QAAQC,IAAIL,GAEZ,IAAMM,EAAmBC,SAASC,cAAc,YAEhDF,EAAiBG,mBAAmB,YAA2BT,EAK7CU,KAAI,SAAAC,G,IAAGV,EAAOU,EAAPV,QAASC,EAAQS,EAART,SAAUC,EAAWQ,EAAXR,YACpC,MAAO,2GAImBS,OAFHV,EAAS,gGAGEU,OADRX,EAAQ,8CAERW,OADQV,EAAS,sCACLU,OAAZT,EAAY,0FAKrCU,KAAK,KAhBdP,EAAiBQ,iBAAiB,SAmBlC,SAAsBC,GAElB,GADAA,EAAMC,iBACwB,QAA1BD,EAAME,OAAOC,SACb,OAKiBC,EAHLJ,EAIVK,EAAcD,EAAMF,OAAOI,QAAQC,OACnCC,EAAQC,cAAcC,OAAO,mBACXb,OAAZQ,EAAY,gCACxBG,EAAMG,OAENC,OAAOb,iBAAiB,WAAW,SAAAC,GACZ,WAAfA,EAAMa,MAGVL,EAAMM,WAVd,IAAyBV,EACfC,EACAG,K","sources":["src/js/gallery-items.js","src/js/01-gallery.js"],"sourcesContent":["export const galleryItems = [\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n    description: 'Hokkaido Flower',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n    description: 'Container Haulage Freight',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n    description: 'Aerial Beach View',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n    description: 'Flower Blooms',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n    description: 'Alpine Mountains',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n    description: 'Mountain Lake Sailing',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n    description: 'Alpine Spring Meadows',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n    description: 'Nature Landscape',\n  },\n  {\n    preview:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n    original:\n      'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n    description: 'Lighthouse Coast Sea',\n  },\n];\n","// 1. Creating and rendering markup from the galleryItems data array and provided gallery item template.\n// 2. Implementing delegation to div.gallery and getting the url of a large image.\n// 3. Adding the script and styles of the modal window library basicLightbox. Use the jsdelivrCDN service and add links to minified (.min) library files to your project.\n// 4. Opening a modal window by clicking on a gallery item. To do this, check out the documentation and examples.\n// 5. Replacing the value of the src attribute of the <img> element in a modal window before opening. Use the ready-made modal window markup with the image from the examples of the basicLightbox library.\n// 6. Add modal window closing upon pressing the Escape key. Make keyboard listening available only while the modal window is open. In the basicLightbox library, there is a method to close the modal window programmatically.\n\nimport { galleryItems } from './gallery-items.js';\n\n// Change code below this line\n\nconsole.log(galleryItems);\n\nconst galleryContainer = document.querySelector('.gallery'); \n    \ngalleryContainer.insertAdjacentHTML('beforeend', makeListItems(galleryItems));\ngalleryContainer.addEventListener('click', onImageClick);\n\n\nfunction makeListItems(images) {\n    return images.map(({ preview, original, description }) => {\n        return `<div class=\"gallery__item\">\n                    <a class=\"gallery__link\"\n                        href=${original}>\n                            <img class=\"gallery__image\"\n                            src=${preview}\n                            data-source=${original}\n                            alt=${description} \n                            />\n                    </a>\n                </div>`\n    })\n        .join(\"\");\n}\n\nfunction onImageClick(event) {\n    event.preventDefault();\n    if (event.target.nodeName !== 'IMG') {\n        return;\n    }\n    openModalWindow(event);\n}\n\nfunction openModalWindow(event) {   \n    const bigImageURL = event.target.dataset.source;\n    const modal = basicLightbox.create(`\n    <img src=\"${bigImageURL}\" width=\"800\" height=\"600\">`);\n    modal.show(); \n\n    window.addEventListener('keydown', event => {\n        if (event.code !== 'Escape') {\n            return;\n        }\n        modal.close();\n    });\n}"],"names":["$9d886f23975dc289$export$f795133be3c5eb8c","preview","original","description","console","log","$d8d07e2615fdd861$var$galleryContainer","document","querySelector","insertAdjacentHTML","map","param","concat","join","addEventListener","event","preventDefault","target","nodeName","event1","bigImageURL","dataset","source","modal","basicLightbox","create","show","window","code","close"],"version":3,"file":"01-gallery.e87b7ee9.js.map"}